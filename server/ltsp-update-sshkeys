#!/bin/sh

#
# Handle command line args
#

while getopts b: ARGS
do
    case ${ARGS} in
        b)    BASE=$OPTARG
              ;;
       \?)    echo "Usage: $0 [-b ltspbase]"
              exit 1
              ;;
       esac
done

# Set up variables
BASE=${BASE:-"/opt/ltsp"}
test -z "${CHROOTS}" && \
    CHROOTS=$(find ${BASE}/. -mindepth 1 -maxdepth 1 -type d 2>/dev/null | \
              grep -v images)
HOSTNAME=$(hostname)
IPS=$(ip -o addr show | awk '$3 == "inet" && $4 !~ /^127\./ { print $4 }' | \
      sed -e 's,/[0-9][0-9]*\>,,g')
OUTPUT=$(tempfile)
ENC="dsa rsa"
NAMES="${HOSTNAME} ${IPS}"
LOGFILE="/var/log/syslog"

# Any chroots found?
if [ -z "${CHROOTS}" ]; then
	logger -f $LOGFILE -t ltsp \
        "No client chroots found, please run ltsp-build-client"
	exit 0
fi

# Get encryption keys
for NAME in ${NAMES}; do
    for ENCRYPTION in ${ENC}; do
		if [ -f /etc/ssh/ssh_host_${ENCRYPTION}_key.pub ]; then
			echo $(echo $NAME $(cat /etc/ssh/ssh_host_${ENCRYPTION}_key.pub | \
                awk '{split ($0, a, " "); print a[1]" "a[2]" "}')) >> $OUTPUT
			logger -f $LOGFILE -t ltsp \
                "# Creating ${encryption}-hostkey for ${NAME}"
		else
			logger -f $LOGFILE -t ltsp \
                "No ${ENCRYPTION} key found for ${NAME}, please configure your ssh server correctly"
		fi
    done
done

# Add any additional hosts
if [ -f /etc/ltsp/ssh_known_hosts.extra ]; then
    cat /etc/ltsp/ssh_known_hosts.extra >> $OUTPUT
fi

for CHROOT in ${CHROOTS}; do
    if [ -d ${CHROOT}/etc/ssh ]; then
        install -m 644 $OUTPUT ${CHROOT}/etc/ssh/ssh_known_hosts
    else
        echo "WARNING: ${CHROOT}/etc/ssh not found. skipping..."
    fi
done

rm -f ${OUTPUT}

exit 0
