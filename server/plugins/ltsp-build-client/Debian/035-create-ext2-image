case "$MODE" in
    commandline)
        add_option "create-ext2-image" "`eval_gettext "create ext2 image for use with NBD"`" "advanced" "false"
        ;;
    configure)
        if [ -n "$option_create_ext2_image_value" ]; then
            CREATE_EXT2_IMAGE=true
        fi
        ;;
    before-install)
        if [ "true" = "$CREATE_EXT2_IMAGE" ]; then
            EXT2_IMAGE_SIZE=${EXT2_IMAGE_SIZE:-"1000"}
            EXT2_IMAGE_FILE=${EXT2_IMAGE_FILE:-"$BASE/images/$CHROOT.img"}

            # ensure needed directories exist
            mkdir -p $ROOT
            mkdir -p $BASE/images/

            # create a sparse file
            dd if=/dev/zero of=$EXT2_IMAGE_FILE.new bs=1024k count=0 seek=$EXT2_IMAGE_SIZE 2> /dev/null

            mkfs.ext2 -q -F $EXT2_IMAGE_FILE.new

            mount -o loop $EXT2_IMAGE_FILE.new $ROOT
        fi
    ;;
    after-install)
        if [ "true" = "$CREATE_EXT2_IMAGE" ]; then
            NBD_ROOT_SERVER=${NBD_ROOT_SERVER:-"192.168.0.1"}
            NBD_ROOT_PORT=${NBD_ROOT_PORT:-"2000"}
            # set to use NBD root from nbd-client package
            BOOTPROMPT_OPTS=${BOOTPROMPT_OPTS:-"root=/dev/nbd0 ip=dhcp boot=local nbdroot=$NBD_ROOT_SERVER,$NBD_ROOT_PORT"}
            export BOOTPROMPT_OPTS
            mkdir -p $ROOT/etc/ltsp/
            echo "BOOTPROMPT_OPTS=\"$BOOTPROMPT_OPTS\"" >> $ROOT/etc/ltsp/update-kernels.conf
            initramfs_scripts=$ROOT/usr/share/initramfs-tools/scripts/
            if [ -f "$initramfs_scripts/nfs-bottom/ltsp" ] && [ ! -f "$initramfs_scripts/local-bottom/ltsp" ]; then
                # copy hook so it gets run when boot=local
                # FIXME: this is a bit hackish
                mkdir -p $initramfs_scripts/local-bottom/
                cp $initramfs_scripts/nfs-bottom/ltsp $initramfs_scripts/local-bottom/
            fi
        fi
    ;;
    finalization)
        if [ "true" = "$CREATE_EXT2_IMAGE" ]; then
            # add $ROOT to list of files to be unmounted.  done in finalization
            # phase so it is the last to be unmounted.
            CHROOT_MOUNTED="$CHROOT_MOUNTED $ROOT"

            if [ -f "$EXT2_IMAGE_FILE" ]; then
                rm "$EXT2_IMAGE_FILE"
            fi
            if [ -f "$EXT2_IMAGE_FILE".new ]; then
                mv "$EXT2_IMAGE_FILE".new "$EXT2_IMAGE_FILE"
            fi
        fi
    ;;
esac
