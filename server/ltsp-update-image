#!/bin/sh
# copyright 2007 Canonical LTD., Oliver Grawert <ogra@ubuntu.com>
# distributed under the terms of the GNU General Public License version 2
# or any later version.

# generates a squashfs image from an ltsp chroot to be served by an inetd driven
# nbd-server process, note that ltsp-client needs to support nbd booting fori
# that. All versions of the ltsp-client package past 5.0.11 should be able
# to do that

usage() {
cat <<EOF
$0 [OPTION]
  -b, --basedir  Base of ltsp chroot.  Default is /opt/ltsp if unspecified.
  -p, --port     Port you wish this nbd image to communicate on.  Default
                 is 2000.
  -a, --arch     Architecture of this image.  Default is arch of the host.
  -h, --help     This message.
EOF
}

#
# Handle command line args
#

ARGS=$(getopt -o b:p:a:h --long base:,port:,arch:,help -n $0 -- "$@")

if [ $? != 0 ]; then
    exit 1                          # getopt failed
fi

eval set -- "${ARGS}"

while true ; do
    case "$1" in
        -b|--base) BASE=$2 ; shift 2 ;;
        -p|--port) PORT=$2 ; shift 2 ;;
        -a|--arch) ARCH=$2 ; shift 2 ;;
        -h|--help) usage ; exit 0 ;;
        --) shift ; break ;;
        *) echo "Internal error!" ; exit 1 ;;
    esac
done

# defaults
BASE=${BASE:-"/opt/ltsp/"}
PORT=${PORT:-"2000"}
if [ -z "${ARCH}" ]; then
    ARCH=$(dpkg --print-architecture)
fi

IMGDIR="${BASE}/images"
CONFFILE="/usr/share/initramfs-tools/conf.d/ltsp"
CHROOT="${BASE}/${ARCH}"

#
# for updateing the pxe config
#

TFTPBOOTDIR=${TFTPBOOTDIR:-"ltsp"}
TFTPDIRS=${TFTPDIRS:-"/var/lib/tftpboot /tftpboot"}

# source config file
if [ -f /etc/default/ltsp-update-image ]; then
    . /etc/default/ltsp-update-image
fi

if [ ! -d "${CHROOT}" ]; then
    echo "Error: chroot ${CHROOT} doesn't exist."
    exit 1
fi

# Find out if we are really an nbd client and if so, build the image.
# Check and see if user's left /proc mounted in chroot.  If so, issue
# a warning, and unmount it
PROC_MOUNTED=$(chroot /opt/ltsp/i386 test -f /proc/cpuinfo && echo True)
if [ -n "${PROC_MOUNTED}" ]; then
    echo "/proc mounted in chroot ${CHROOT}, Unmounting."
    umount ${CHROOT}/proc
fi

# Are we a chroot that wants an nbd image made?
if $(grep nbd "${CHROOT}/${CONFFILE}" > /dev/null 2>&1); then
    # make sure the images dir exists
    if [ ! -d ${IMGDIR} ]; then
        mkdir -p ${IMGDIR}
    fi

    IMAGE="${IMGDIR}/${ARCH}.img"
    rm "${IMAGE}"
    mksquashfs "${CHROOT}" "${IMAGE}.tmp" -e cdrom
    mv "${IMAGE}.tmp" "${IMAGE}"
    chmod 0744 "${IMAGE}"

    # Make sure hosts.allow has the keepalive option for nbdrootd
    if [ -z "$(grep nbdrootd /etc/hosts.allow)" ]; then
        echo 'nbdrootd: ALL: keepalive' >> /etc/hosts.allow
    fi

    # If the image is already in inetd.conf, and not commented out, exit ok
    if [ -n "$(grep ${IMAGE} /etc/inetd.conf | grep -v '^#')" ] ; then
        exit 0
    fi

    # Check and see if our desired port is already there.
    if grep ^${PORT} /etc/inetd.conf > /dev/null 2>&1 ; then
        echo "Info: port ${PORT} is already defined in inetd.conf"
        exit 0
    fi

    # Update inetd.conf
    update-inetd --group LTSP --add "${PORT}                   stream  tcp\
        nowait  nobody /usr/sbin/tcpd /usr/sbin/nbdrootd ${IMAGE}"

    # If port's been specified, set the port.
    # Thats very ugly and needs to go to the config file in the chroot,
    # else port is lost after ltsp-update-image is run

    if [ -n "${PORT}" ] ; then
        for TFTPDIR in $TFTPDIRS ; do
            if [ ! -d $TFTPDIR ]; then
                continue       # skip directory
            fi
            PXECFG="${TFTPDIR}/${TFTPBOOTDIR}/${ARCH}/pxelinux.cfg/default"
            if [ ! -f ${PXECFG} ]; then
                continue
            fi
            if grep nbdport ${PXECFG} > /dev/null 2>&1 ; then
                sed -i -e 's/nbdport=[0-9]*/nbdport=${PORT}/g' ${PXECFG}
            else
                sed -i -e 's/$/ nbdport=${PORT}/g' ${PXECFG}
            fi
        done
    fi
fi
