#!/usr/bin/python

import os
import sys
import subprocess
import time
import signal

def get_config(name):
    getltscfg = subprocess.Popen(['getltscfg', name], stdout=subprocess.PIPE)
    value = getltscfg.stdout.read()
    if len(value) > 0 and value[-1] == '\n':
        value = value[:-1]
    return value

class LDM:
    def __init__(self):
        self.server = get_config('SERVER')

    def run(self):
        null = open('/dev/null', 'w')
        logfile = open('/var/log/ldm.log', 'a')
        
        os.dup2(null.fileno(), sys.stdin.fileno())
        os.dup2(logfile.fileno(), sys.stdout.fileno())
        os.dup2(logfile.fileno(), sys.stderr.fileno())

        while True:
            display = ':0'
            server = subprocess.Popen(['Xorg', '-ac', '-noreset', display], stdout=sys.stdout, stderr=sys.stderr)
            
            env = os.environ.copy()
            env['DISPLAY'] = ':0'
            
            time.sleep(5)
            greeter = subprocess.Popen(['/usr/lib/ltsp/greeters/gtk'],
                                       stdout=subprocess.PIPE, stderr=sys.stderr, env=env)
            greeter_output = greeter.stdout.readlines()
            if len(greeter_output) == 2:
                username = greeter_output[0][:-1]
                password = greeter_output[1][:-1]

                self.spawn_session(display, username, password, 'x-session-manager')
            else:
                print "Didn't get the right output from the greeter"

            os.kill(server.pid, signal.SIGTERM)
            os.waitpid(server.pid, 0)

    def spawn_session(self, display, username, password, session_manager):
        pipe_read, pipe_write = os.pipe()
        pid = os.fork()

        if pid == 0:
            os.close(pipe_write)
            sys.stdin.close()
            os.setsid()
            os.environ['DISPLAY'] = display
            os.environ['LDM_ASKPASS_FD'] = str(pipe_read)
            os.environ['SSH_ASKPASS'] = '/usr/lib/ltsp/ldm-askpass'
            command = ['ssh', '-v',
                       '-X',
                       '%s@%s' % (username,self.server),
                       session_manager]

            os.execvp(command[0], command)
            sys.exit(1)

        os.close(pipe_read)
        os.write(pipe_write,password)
        os.close(pipe_write)
        os.waitpid(pid, 0)

ldm = LDM()
ldm.run()
