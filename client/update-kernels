#!/bin/sh -e

# this script is run either chrooted on the server, or by a client with write
# access to the NFS mount point. (much of this code was originally in
# server/ltsp-update-kernels). --vagrant 20060801

BOOT=/boot
SUB_ARCH=$(uname -m)
for kernel in $BOOT/vmlinu* ; do
    basename=$(basename "$kernel")
    initrd=initrd.img
    nbi=nbi.img

    case $basename in
        vmlinuz|vmlinux)
            # USE DEFAULT
        ;;
        vmlinu*.old) 
            initrd=$initrd.old
            nbi=$nbi.old
        ;;
        vmlinuz*) 
            version=${basename##vmlinuz-}
            initrd=$initrd-$version
            nbi=$nbi-$version
        ;;
        vmlinux*) 
            version=${basename##vmlinux-}
            initrd=$initrd-$version
            nbi=$nbi-$version
        ;;
    esac

    if [ -L "$kernel" ]; then
        basename="$(readlink $kernel)"
        if [ -f "$BOOT/$basename" ]; then
            case $basename in
                vmlinuz)
                    version=${basename##vmlinuz-}
                ;;
                vmlinux)
                    version=${basename##vmlinux-}
                ;;
            esac
            case $SUB_ARCH in
                sparc*) 
                    ln -sf $nbi-$version-$SUB_ARCH $BOOT/$nbi
                ;;
                *)
                    ln -sf $nbi-$version $BOOT/$nbi
                ;;
            esac
        fi
    else
        if which mkelf-linux >/dev/null; then
            if [ -f "$BOOT/$initrd" ]; then
                mkelf-linux --ip=dhcp -o $BOOT/$nbi $kernel $BOOT/$initrd
            else
                mkelf-linux --ip=dhcp -o $BOOT/$nbi $kernel
            fi
        else
            if [ -z "$mkelf_seen" ]; then
                echo "Skipping etherboot images.  Install the mknbi package if you need them."
                mkfelf_seen=true
            fi
        fi
        if which netabootwrap >/dev/null; then
            if [ -f "$BOOT/$initrd" ]; then
                netabootwrap -t $BOOT/$nbi -k $kernel -i $BOOT/$initrd
            else
                netabootwrap -t $BOOT/$nbi -k $kernel
            fi
        else
            if [ -z "$netabootwrap_seen" ]; then
                echo "Skipping netabootwrap images.  Install the aboot package if you need them."
                netabootwrap_seen=true
            fi
        fi
        if which elftoaout >/dev/null ; then
            piggyback_cmd=""
            case $SUB_ARCH in
                sparc64) piggyback_cmd=piggyback64 ;;
                sparc32) piggyback_cmd=piggyback32 ;;
            esac
            sysmap=$BOOT/System.map-$version
            nbi=$nbi-$SUB_ARCH

            # TODO: proper tempfile handline
            gzip -cd $kernel > $nbi.tmp
            elftoaout -o $nbi $nbi.tmp
            if [ -f "$initrd" ]; then
                $piggyback_cmd $nbi $sysmap $initrd
            else
                $piggyback_cmd $nbi $sysmap
            fi
        else
            if [ -z "$sparc_piggyback_seen" ]; then
                echo "Skipping sparc piggyback images. Install the sparc-utils package if you need them."
                sparc_piggyback_seen=true
            fi
        fi
    fi
done
