# This script sets device options for the specified driver
# using the X_OPTION_01 .. X_OPTION_10 lts.conf vars
# or the older X_DEVICE_OPTION_01 .. X_DEVICE_OPTION_10 lts.conf vars
#
unset X_DEVICE_OPTION

export X_DEVICE_OPTION_01=${X_DEVICE_OPTION_01:-${X_OPTION_01}}
export X_DEVICE_OPTION_02=${X_DEVICE_OPTION_02:-${X_OPTION_02}}
export X_DEVICE_OPTION_03=${X_DEVICE_OPTION_03:-${X_OPTION_03}}
export X_DEVICE_OPTION_04=${X_DEVICE_OPTION_04:-${X_OPTION_04}}
export X_DEVICE_OPTION_05=${X_DEVICE_OPTION_05:-${X_OPTION_05}}
export X_DEVICE_OPTION_06=${X_DEVICE_OPTION_06:-${X_OPTION_06}}
export X_DEVICE_OPTION_07=${X_DEVICE_OPTION_07:-${X_OPTION_07}}
export X_DEVICE_OPTION_08=${X_DEVICE_OPTION_08:-${X_OPTION_08}}
export X_DEVICE_OPTION_09=${X_DEVICE_OPTION_09:-${X_OPTION_09}}
export X_DEVICE_OPTION_10=${X_DEVICE_OPTION_10:-${X_OPTION_10}}

if [ -n "$(env|grep X_DEVICE_OPTION)" ]; then
    device_hacks="$device_hacks set_dev_options"
    CONFIGURE_X="True"

    set_dev_options() {
        for i in 01 02 03 04 05 06 07 08 09 10; do
            eval X_DEVICE_OPTION="\$X_DEVICE_OPTION_$i"
            [ -n "${X_DEVICE_OPTION}" ] && \
                echo "        Option ${X_DEVICE_OPTION}" >> ${XCONF} 
        done
    }
fi
